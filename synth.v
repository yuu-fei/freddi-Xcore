/* Generated by Yosys 0.23+25 (git sha1 13e4f343b, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* hdlname = "\\Xcore_gshare_bpu" *)
(* top =  1  *)
(* src = "./rtl/core/Xcore_gshare_bpu.v:19.1-149.10" *)
module Xcore_gshare_bpu(i_sys_clk, i_sys_rst, i_cmt_ghr, i_cmt_req, i_cmt_ghr_target, i_cmt_ghr_val, i_cmt_bits, i_pref_instr_vld, i_pref_pc_vld, i_pref_instr_pc, i_mdec_b, i_mdec_jal, i_mdec_jalr, i_mdec_b_ofs, i_mdec_jal_ofs, i_mdec_jalr_ofs, i_wb_instr_pc, i_wb_cmt_type, i_wb_cmt_target, o_bpu_redir, o_bpu_target
, o_bpu_bits, o_bpu_btb_err);
  (* src = "./rtl/core/Xcore_gshare_bpu.v:72.14-72.22" *)
  wire [1:0] bim_bits;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:122.21-122.35" *)
  wire [31:0] bpu_btb_target;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:121.23-121.35" *)
  wire [2:0] bpu_btb_type;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:120.23-120.37" *)
  wire bpu_btb_update;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:123.23-123.36" *)
  wire bpu_btb_valid;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:53.7-53.14" *)
  wire bpu_req;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:52.7-52.16" *)
  wire bpu_taken;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:130.17-130.24" *)
  wire btb_hit;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:128.15-128.25" *)
  wire [31:0] btb_target;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:129.18-129.26" *)
  wire [2:0] btb_type;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:56.16-56.23" *)
  wire [1:0] ghr_val;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:28.29-28.39" *)
  input [1:0] i_cmt_bits;
  wire [1:0] i_cmt_bits;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:23.13-23.22" *)
  input i_cmt_ghr;
  wire i_cmt_ghr;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:25.13-25.29" *)
  input i_cmt_ghr_target;
  wire i_cmt_ghr_target;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:26.23-26.36" *)
  input [1:0] i_cmt_ghr_val;
  wire [1:0] i_cmt_ghr_val;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:24.13-24.22" *)
  input i_cmt_req;
  wire i_cmt_req;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:33.25-33.33" *)
  input i_mdec_b;
  wire i_mdec_b;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:36.23-36.35" *)
  input [31:0] i_mdec_b_ofs;
  wire [31:0] i_mdec_b_ofs;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:34.25-34.35" *)
  input i_mdec_jal;
  wire i_mdec_jal;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:37.23-37.37" *)
  input [31:0] i_mdec_jal_ofs;
  wire [31:0] i_mdec_jal_ofs;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:35.25-35.36" *)
  input i_mdec_jalr;
  wire i_mdec_jalr;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:38.23-38.38" *)
  input [31:0] i_mdec_jalr_ofs;
  wire [31:0] i_mdec_jalr_ofs;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:32.23-32.38" *)
  input [31:0] i_pref_instr_pc;
  wire [31:0] i_pref_instr_pc;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:30.25-30.41" *)
  input i_pref_instr_vld;
  wire i_pref_instr_vld;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:31.25-31.38" *)
  input i_pref_pc_vld;
  wire i_pref_pc_vld;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:20.13-20.22" *)
  input i_sys_clk;
  wire i_sys_clk;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:21.13-21.22" *)
  input i_sys_rst;
  wire i_sys_rst;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:43.23-43.38" *)
  input [31:0] i_wb_cmt_target;
  wire [31:0] i_wb_cmt_target;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:41.25-41.38" *)
  input [2:0] i_wb_cmt_type;
  wire [2:0] i_wb_cmt_type;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:40.23-40.36" *)
  input [31:0] i_wb_instr_pc;
  wire [31:0] i_wb_instr_pc;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:88.17-88.25" *)
  wire [31:0] instr_pc;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:47.25-47.35" *)
  output [1:0] o_bpu_bits;
  wire [1:0] o_bpu_bits;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:48.25-48.38" *)
  output o_bpu_btb_err;
  wire o_bpu_btb_err;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:45.25-45.36" *)
  output o_bpu_redir;
  wire o_bpu_redir;
  (* src = "./rtl/core/Xcore_gshare_bpu.v:46.23-46.35" *)
  output [31:0] o_bpu_target;
  wire [31:0] o_bpu_target;
  (* module_not_derived = 32'd1 *)
  (* src = "./rtl/core/Xcore_gshare_bpu.v:74.15-84.2" *)
  Xcore_if_bim u_Xcore_if_bim (
    .i_bpu_addr({ i_pref_instr_pc[7:0], ghr_val }),
    .i_cmt_addr(i_wb_instr_pc[9:0]),
    .i_cmt_bits(i_cmt_bits),
    .i_cmt_ghr(i_cmt_ghr),
    .i_cmt_req(i_cmt_req),
    .i_sys_clk(i_sys_clk),
    .i_sys_rst(i_sys_rst),
    .o_bim_bits(bim_bits)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./rtl/core/Xcore_gshare_bpu.v:90.15-117.2" *)
  Xcore_if_bpu u_Xcore_if_bpu (
    .i_bim_bits(bim_bits),
    .i_btb_hit(btb_hit),
    .i_btb_target(btb_target),
    .i_btb_type(btb_type),
    .i_mdec_b(i_mdec_b),
    .i_mdec_b_ofs(i_mdec_b_ofs),
    .i_mdec_jal(i_mdec_jal),
    .i_mdec_jal_ofs(i_mdec_jal_ofs),
    .i_mdec_jalr(i_mdec_jalr),
    .i_mdec_jalr_ofs(i_mdec_jalr_ofs),
    .i_pref_instr_pc(i_pref_instr_pc),
    .i_pref_instr_vld(i_pref_instr_vld),
    .i_pref_pc_vld(i_pref_pc_vld),
    .i_sys_clk(i_sys_clk),
    .i_sys_rst(i_sys_rst),
    .o_bpu_bits(o_bpu_bits),
    .o_bpu_btb_err(o_bpu_btb_err),
    .o_bpu_btb_target(bpu_btb_target),
    .o_bpu_btb_type(bpu_btb_type),
    .o_bpu_btb_update(bpu_btb_update),
    .o_bpu_btb_valid(bpu_btb_valid),
    .o_bpu_ghr_req(bpu_taken),
    .o_bpu_ghr_taken(bpu_req),
    .o_bpu_instr_pc(instr_pc),
    .o_bpu_redir(o_bpu_redir),
    .o_bpu_target(o_bpu_target)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./rtl/core/Xcore_gshare_bpu.v:132.15-148.2" *)
  Xcore_if_btb u_Xcore_if_btb (
    .i_bpu_btb_target(bpu_btb_target),
    .i_bpu_btb_type(bpu_btb_type),
    .i_bpu_btb_update(bpu_btb_update),
    .i_bpu_btb_valid(bpu_btb_valid),
    .i_bpu_instr_pc(instr_pc),
    .i_pref_pc(i_pref_instr_pc),
    .i_sys_clk(i_sys_clk),
    .i_sys_rst(i_sys_rst),
    .i_wb_cmt_req(i_cmt_req),
    .i_wb_cmt_target(i_wb_cmt_target),
    .i_wb_cmt_type(i_wb_cmt_type),
    .i_wb_instr_pc(i_wb_instr_pc),
    .o_btb_hit(btb_hit),
    .o_btb_target(btb_target),
    .o_btb_type(btb_type)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./rtl/core/Xcore_gshare_bpu.v:58.15-69.2" *)
  Xcore_if_ghr u_Xcore_if_ghr (
    .i_bpu_req(bpu_req),
    .i_bpu_taken(bpu_taken),
    .i_cmt_ghr(i_cmt_ghr),
    .i_cmt_ghr_val(i_cmt_ghr_val),
    .i_cmt_req(i_cmt_req),
    .i_cmt_target(i_cmt_ghr_target),
    .i_sys_clk(i_sys_clk),
    .i_sys_rst(i_sys_rst),
    .o_ghr_val(ghr_val)
  );
endmodule
